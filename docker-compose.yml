version: "3.9"

services:
  api-nginx:
    restart: always
    build:
      context: ./api/docker
      dockerfile: development/nginx/Dockerfile
    volumes:
      - ./api:/app
    depends_on:
      - api-php-fpm
    ports:
      - "8080:80"

  api-php-fpm:
    restart: always
    build:
      context: ./api/docker
      dockerfile: development/php-fpm/Dockerfile
    volumes:
      - ./api:/app
    depends_on:
      - api-postgres
      - api-redis
      - api-queue-redis
      - storage
      - mailer
      - centrifugo

  api-php-cli:
    build:
      context: ./api/docker
      dockerfile: development/php-cli/Dockerfile
    volumes:
      - ./api:/app
      - composer:/root/.composer/cache
    tty: true
    depends_on:
      - api-postgres
      - api-redis
      - api-queue-redis
      - storage
      - mailer
      - centrifugo

  api-queue-worker:
    restart: always
    build:
      context: ./api/docker
      dockerfile: development/php-cli/Dockerfile
    volumes:
      - ./api:/app
      - composer:/root/.composer/cache
    depends_on:
      - api-postgres
      - api-redis
      - api-queue-redis
      - storage
      - mailer
      - centrifugo
    command: sh -c "until [ -f .ready ] ; do sleep 1 ; done && php bin/console messenger:consume async -vv"

  api-postgres:
    image: postgres:16.1-alpine
    restart: always
    volumes:
      - api-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: app
    ports:
      - "54321:5432"

  adminer:
    image: adminer
    restart: always
    ports:
      - "8801:8080"

  api-redis:
    image: redis:7.0-alpine
    restart: always
    volumes:
      - api-redis:/data
    command:
      - 'redis-server'
      - '--databases 2'
      - '--save 900 1'
      - '--save 300 10'
      - '--save 60 10000'
      - '--requirepass secret'

  api-queue-redis:
    image: redis:7.0-alpine
    restart: always
    volumes:
      - api-queue-redis:/data

  storage:
    build:
      context: ./storage/docker
      dockerfile: nginx/Dockerfile
    volumes:
      - ./storage:/app
    ports:
      - "8081:80"

  mailer:
    image: mailhog/mailhog
    restart: always
    ports:
      - "8082:8025"

  centrifugo:
    image: centrifugo/centrifugo:v5.0
    restart: always
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      CENTRIFUGO_SECRET: secret
      CENTRIFUGO_API_KEY: secret
    volumes:
      - ./centrifugo/docker/development/centrifugo:/centrifugo
    ports:
      - "8083:8000"
    command: centrifugo --admin --admin_insecure

volumes:
  api-postgres:
  api-redis:
  api-queue-redis:
  composer: